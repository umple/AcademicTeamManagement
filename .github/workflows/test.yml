name: "Source Code Tests"
on: [push]
env:
  COMPOSE_DOCKER_CLI_BUILD: 0
  DOCKER_BUILDKIT: 0
  FLASK: 5001
  REACT: 3000
  MONGO: 27017
  MONGODB_HOST: mongodb_host
  MONGODB_INITDB_DATABASE: AcademicTeamManagementDB
  MONGODB_INITDB_ROOT_USERNAME: ${{secrets.MONGODB_INITDB_ROOT_USERNAME}}
  MONGODB_INITDB_ROOT_PASSWORD: ${{secrets.MONGODB_INITDB_ROOT_PASSWORD}}
  INIT_MOUNT: "./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro"
  PRIVATE_KEY: ${{secrets.PRIVATE_KEY}}
  ENVIORNMENT: "TESTING"
  
# cancel the in-progress job related to the current PR
concurrency:
  group:  ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  docker-compose:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create mock .env
        run: echo mock > .env
      - name: docker-compose build
        run: docker compose up -d
  unit-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Init Python3
        uses: actions/setup-python@v1
      - name: Install Coverage Tool
        run: pip3 install coverage
      - name: Install pipenv
        run: python -m pip install --upgrade pipenv
      - name: Install dependencies
        run: pipenv install
      - name: Run Unit Tests
        run: pipenv prod_unit_test #coverage run -m unittest discover -v tests/pipeline_tests/unit test_*.py
      - name: Create Coverage Report
        run: | 
          coverage html
          coverage report
      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: /home/runner/work/AcademicTeamManagement/AcademicTeamManagement/server/htmlcov

